{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// // Описаний у документації\n// import iziToast from 'izitoast';\n// // Додатковий імпорт стилів\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// const input = document.querySelector('input[name=\"delay\"]');\n// const radio = document.querySelectorAll('input[name=\"state\"]');\n\n// const btn = document.querySelector('.btn');\n\n// function checkPromise() {\n//   const selectedState = [...radio].find(radio => radio.checked)?.value;\n//   return new Promise((resolve, reject) => {\n//     if (input.value > 0 && radio.value('fulfilled')) {\n//       setTimeout(\n//         () => resolve(`✅ Fulfilled promise in ${input.value}ms`),\n//         input.value\n//       );\n//     } else\n//       setTimeout(\n//         () => reject(`❌ Rejected promise in ${input.value}ms`),\n//         input.value\n//       );\n//   });\n// }\n\n// btn.addEventListener('click', event => {\n//   event.preventDefault();\n//   if (!document.querySelector('.notification')) {\n//     document.body.innerHTML += `<div class=\"notification\"></div>`;\n//   }\n//   const notification = document.querySelector('.notification');\n//   checkPromise()\n//     .then(message => {\n//       notification.innerHTML = `<div class=\"success\">${message}</div>`;\n//     })\n//     .catch(message => {\n//       notification.innerHTML = `<div class=\"error\">${message}</div>`;\n//     });\n// });\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault(); // Запобігаємо перезавантаженню сторінки\n\n  const delay = Number(event.target.delay.value); // Отримуємо значення затримки\n  const state = event.target.state.value; // Отримуємо значення стану (fulfilled або rejected)\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  // Обробка промісу\n  promise\n    .then(delay => {\n      iziToast.success({\n        title: 'Success',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n        position: 'topRight',\n      });\n    })\n    .catch(delay => {\n      iziToast.error({\n        title: 'Error',\n        message: `❌ Rejected promise in ${delay}ms`,\n        position: 'topRight',\n      });\n    });\n});\n"],"names":["form","event","delay","state","resolve","reject","iziToast"],"mappings":"+FA4CA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,GAAS,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAQ,OAAOD,EAAM,OAAO,MAAM,KAAK,EACvCE,EAAQF,EAAM,OAAO,MAAM,MAEjB,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAIE,KAAKA,GAAS,CACbI,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,0BAA0BJ,CAAK,KACxC,SAAU,UAClB,CAAO,CACP,CAAK,EACA,MAAMA,GAAS,CACdI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBJ,CAAK,KACvC,SAAU,UAClB,CAAO,CACP,CAAK,CACL,CAAC"}